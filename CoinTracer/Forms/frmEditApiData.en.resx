<?xml version="1.0" encoding="utf-8"?>
<!--
 **************************************
 *
 * Copyright 2013-2022 Andreas Nebinger
 *
 * Lizenziert unter der EUPL, Version 1.2 oder - sobald diese von der Europäischen Kommission genehmigt wurden -
   Folgeversionen der EUPL ("Lizenz");
 * Sie dürfen dieses Werk ausschließlich gemäß dieser Lizenz nutzen. Eine Kopie der Lizenz finden Sie hier:

 * https://joinup.ec.europa.eu/release/eupl/v12  (oder in der in diesem Projekt enthaltenden Datei "Lizenz.txt")
 
 * Sofern nicht durch anwendbare Rechtsvorschriften gefordert oder in schriftlicher Form vereinbart, wird die
   unter der Lizenz verbreitete Software "so wie sie ist", OHNE JEGLICHE GEWÄHRLEISTUNG ODER BEDINGUNGEN -
   ausdrücklich oder stillschweigend - verbreitet.
 * Die sprachspezifischen Genehmigungen und Beschränkungen unter der Lizenz sind dem Lizenztext zu entnehmen.

 =======
 English
 =======
 
 * Licensed under the EUPL, Version 1.2 or - as soon they will be approved by the European Commission -
   subsequent versions of the EUPL (the "Licence");
 * You may not use this work except in compliance with the Licence. You may obtain a copy of the Licence at:
 
 * https://joinup.ec.europa.eu/release/eupl/v12  (or in the file "License.txt", which is part of this project)
 
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is
   distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and limitations under the Licence.
 *
 **************************************
-->

<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblCurrencies.Location" type="System.Drawing.Point, System.Drawing">
    <value>296, 155</value>
  </data>
  <data name="lblCurrencies.Size" type="System.Drawing.Size, System.Drawing">
    <value>100, 15</value>
  </data>
  <data name="lblCurrencies.Text" xml:space="preserve">
    <value>Active currencies:</value>
  </data>
  <data name="LastImportTimestampDateTimePicker.Location" type="System.Drawing.Point, System.Drawing">
    <value>111, 152</value>
  </data>
  <data name="LastImportTimestampLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>102, 15</value>
  </data>
  <data name="LastImportTimestampLabel.Text" xml:space="preserve">
    <value>Collect data from:</value>
  </data>
  <data name="ApiSecretDecryptedTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>111, 123</value>
  </data>
  <data name="ApiSecretDecryptedTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>374, 23</value>
  </data>
  <data name="ApiKeyDecryptedTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>111, 94</value>
  </data>
  <data name="ApiKeyDecryptedTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>374, 23</value>
  </data>
  <data name="ApiSecretLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>63, 125</value>
  </data>
  <data name="ApiKeyLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>56, 96</value>
  </data>
  <data name="ApiKeyLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>49, 15</value>
  </data>
  <data name="ApiKeyLabel.Text" xml:space="preserve">
    <value>API key:</value>
  </data>
  <data name="BezeichnungLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>67, 69</value>
  </data>
  <data name="BezeichnungLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>38, 15</value>
  </data>
  <data name="BezeichnungLabel.Text" xml:space="preserve">
    <value>Label:</value>
  </data>
  <data name="BezeichnungTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>111, 67</value>
  </data>
  <data name="BezeichnungTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>374, 23</value>
  </data>
  <data name="PlattformIDComboBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>111, 38</value>
  </data>
  <data name="ImportPlattformIDLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>49, 40</value>
  </data>
  <data name="ImportPlattformIDLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>56, 15</value>
  </data>
  <data name="ImportPlattformIDLabel.Text" xml:space="preserve">
    <value>Platform:</value>
  </data>
  <data name="AktivCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>111, 194</value>
  </data>
  <data name="IDTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>111, 9</value>
  </data>
  <data name="ZeitpunktLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>299, 12</value>
  </data>
  <data name="ZeitpunktLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>68, 15</value>
  </data>
  <data name="ZeitpunktLabel.Text" xml:space="preserve">
    <value>Created on:</value>
  </data>
  <data name="AktivLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>62, 197</value>
  </data>
  <data name="AktivLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 15</value>
  </data>
  <data name="AktivLabel.Text" xml:space="preserve">
    <value>Active:</value>
  </data>
  <data name="LastImportTimestampTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>119, 152</value>
  </data>
  <data name="lblBitfinex.Text" xml:space="preserve">
    <value>Only necessary permissions for the API key: ' Account Info' and 'Account History'</value>
  </data>
  <data name="lblBitcoinDe.Text" xml:space="preserve">
    <value>- Bitcoin.de does only provide transactions carried out up to the day before via the trading API.
- Necessary right required for the API key: 'showAccountLedger'</value>
  </data>
  <data name="lblHinweise.Size" type="System.Drawing.Size, System.Drawing">
    <value>40, 15</value>
  </data>
  <data name="lblHinweise.Text" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="BindingNavigatorCountItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>35, 22</value>
  </data>
  <data name="BindingNavigatorCountItem.Text" xml:space="preserve">
    <value>of {0}</value>
  </data>
  <data name="BindingNavigatorMoveFirstItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAEqSURBVDhPYxg8oHDW8/9NC57/z5z4+D9UCAOEtz/AKceQ
        O/PZ/1VH3v/HpSi++8H/4IZruA3ImPL0/8J9H7Aqiu95+H/p/v///asv4DYgoefJ/2lb3mMoimi/D9ac
        Oev/f6/SE7gNiOx69L939QcURaGt98CaW9cBbe/8+98l/wBuAwKbH/6vm/8Orii45e7/RXv//+8Aas6Y
        8/O/Xd3P//YZ23Eb4FF1/3/+tDcoiuyKb/9Pn/P7v3/Xt/86he/+WySsx22Afend/9mTX2Mo0k85/9+k
        6MV/laxP/40jl+E2wCLvzv/U/tdYFRkknfgvm/b1v27wPNwGGGbd/h/W8hKnIv3Uy/81fKfhNkAn7cZ/
        v+qHeBWpeEzAbYBT7pX/IAV4FQ1CwMAAAPB2wKul5ZpwAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="BindingNavigatorMovePreviousItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAC2SURBVDhPYxg6ILz9wX8ok3QQ3/3gf3DDNfIMiO95+H/p
        /v///asvkG5ARPt9sObMWf//e5WeIM2A0NZ7YM2t64C2d/7975J/gHgDglvu/l+09///DqDmjDk//9vV
        /fxvn7GdNBfYFd/+nz7n93//rm//dQrf/bdIWE96GOinnP9vUvTiv0rWp//GkctINwAEDJJO/JdN+/pf
        N3geeQaAgH7q5f8avtPINwAEVDwmUGbAYAUMDADQFGCYBLpQVQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="BindingNavigatorMoveNextItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAACjSURBVDhPYxh8oHDW8/9QJnkgd+az/wnd98g3JGPK0//z
        9v/+n9B1hzxDEnqe/J+979f/zq1//7uVXibdkMiuR/+nbPv1v2Tp3/8J0//+t8k9S5ohgc0P/7eufQ/W
        bFzy5b909LX/xpHLiDfEo+r+/5K57+CaFV16SHOBfend/4Etz8jTDAIWeXf+2xRcIU8zCBhm3SZfMwjo
        pN0gX/NQBAwMAKB+X6AHNEI4AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="BindingNavigatorMoveLastItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAEsSURBVDhPYxhcoHDW8/9QJgYAyTUteP4/c+JjnGoYcmc+
        +5/QfQ+rApDcqiPv/4e3P8BtQMaUp//n7f/9P6HrDoYikNzCfR/+Bzdcw21AQs+T/7P3/frfufXvf7fS
        yygKQXLTtrz/7199AbcBkV2P/k/Z9ut/ydK//xOm//1vk3sWrhgk17v6w3+v0hO4DQhsfvi/de17sGbj
        ki//paOv/TeOXAbWAJKrm//uv0v+AdwGeFTd/18y9x1cs6JLD1wxSC5/2pv/9hnbcRtgX3r3f2DLMwzN
        IACSy578+r9FwnrcBljk3flvU3AFQzMIgORS+1/DvYQVGGbdxqoZBEByYS0v/+sGz8NtgE7aDZySIDm/
        6of/NXyn4TYAH3DKvfJfxWMCGEOFBgVgYAAAvtG/s7kMTpwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="BindingNavigatorAddNewItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAFKSURBVDhPYxi84O4C9v+35nH+vzqH6//FGbz/ocLEg+tA
        jX8eNf7/87Dh/8nJAqQbcH46L9yAgz0ipBtwfJIgUHPd/z8Pqv7vaBcnbMClmTz/z07l+38SqPFIv9D/
        fd0iQM3l///eK/q/vkHm/6oauf9LKxX/zy9V/j+rSBXTwFNAf/55WA/UVAvElf//3CsB4rz/f+9m/v97
        J/n/39tx///djADikP+TcjQxDTjUKwx27t/7pUCNBUCN2UCNqUCNCf//3YoGagz7/+9G0P9/1/3+d6Xp
        Yhqws13i/5Zmqf/rwM6V/7+kQvH/31sxQI3h/6fmafyfkKX1vztD9397qv7/5kRDwmEyG+hPkHP/3Qj4
        35OhQ1gDOgD5898NfyD2+9+arE+6Ad3pumD/gnB9nBHpBrQkGfxviDf8XxNr/L8y2oR0A+gEGBgAJCPY
        nnX8iGkAAAAASUVORK5CYII=
</value>
  </data>
  <data name="BindingNavigatorDeleteItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAFvSURBVDhPtZBNKMNhHMd3Vd5K7eKCWjkgk7yEZDKksciE
        yMwkBw6LhHZxcCDlQg64SA4kJeVE4jRv89qaWn8tUtoF/7g8H2Ootb+x4nt56nm+38/v+/xUfyJcJ9Bt
        BMcOH1eRiZV5RGcVwqyHrfWwELweWJoJ9rC2AL0mRLse0VEBcxOKkLeGwlwGIz2h75w6ApC6bERjAdia
        gkxiyIow5cKkPWxDFYvTiMrUdxDDVnCfwVh/AOo/P2zhhccFzcWBLxmzEPV50Nfyu/Cn2N/1V85DGNKh
        Rhth+EaCxkLISUDWxvOgjYXa7F/Wv7kGUz4UJeKzGODi6H25d2l+yPLsDwu8v4NWHY8lSbhL0/HtbX8F
        GLXh1MQgnxwoQ3h5hkEL6JI5TlPj21gNMd6WZyC1VSN7r0Mh7G4i56pxpkQhdTWA/KQ4aUcTh+x0KACm
        RpBSo3HrM0G6Uq7pl2zvhvNDBcClE8YH4HDv2/A/SKV6BYojAxyEJtLJAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="Label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>485, 37</value>
  </data>
  <data name="Label3.Text" xml:space="preserve">
    <value>Configure here as may API credentials for the supported trading platforms as you like. To disable an entry, remove the mark next to "active".</value>
  </data>
  <data name="Label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>128, 17</value>
  </data>
  <data name="Label4.Text" xml:space="preserve">
    <value>Edit API credentials</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Edit API credentials</value>
  </data>
  <data name="IDLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>84, 11</value>
  </data>
</root>
